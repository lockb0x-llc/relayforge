version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: relayforge
      POSTGRES_USER: relayforge
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U relayforge"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RelayForge API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - DB_HOST=postgres
      - DB_USER=relayforge
      - DB_PASSWORD=password
      - DB_NAME=relayforge
      - DB_PORT=5432
      - DB_SSLMODE=disable
      - PORT=8080
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./configs:/app/configs
    restart: unless-stopped

  # RelayForge Runner
  runner:
    build:
      context: .
      dockerfile: Dockerfile.runner
    environment:
      - API_URL=http://api:8080
      - RUNNER_NAME=docker-runner
      - RUNNER_TAGS=linux,docker,shell
      - RUNNER_TOKEN=${RUNNER_TOKEN:-}
    depends_on:
      - api
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - runner_workspace:/workspace
    restart: unless-stopped
    deploy:
      replicas: 2

  # RelayForge Web UI
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8080
    ports:
      - "3000:3000"
    depends_on:
      - api
    restart: unless-stopped

  # Redis for job queue (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  runner_workspace: